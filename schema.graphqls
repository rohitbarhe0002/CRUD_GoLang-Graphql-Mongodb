type Query {
  boards: [Board!]!
}

type Board {
  id: ID!
  name: String!
  isActive: Boolean!
  columns: [Column!]!
}

type Mutation {
  createUser(id: ID!, name: String!): User!
  createBoard(name: String!, isActive: Boolean!, columns: [ColumnInput!]!): Board!
}

input CreateBoardInput {
    name: String!
    isActive: Boolean!
    columns: [ColumnInput!]!
}

input ColumnInput {
    name: String!
    tasks: [TaskInput!]!
}

input TaskInput {
    title: String!
    description: String!
    status: String!
    subtasks: [SubtaskInput!]!
}

input SubtaskInput {
    title: String!
    isCompleted: Boolean!
}

type Mutation {
    createBoard(input: CreateBoardInput!): Board!
}

type Board {
    _id: ID!
    name: String!
    isActive: Boolean!
    columns: [Column!]!
}

type Column {
    name: String!
    tasks: [Task!]!
}

type Task {
    title: String!
    description: String!
    status: String!
    subtasks: [Subtask!]!
}

type Subtask {
    title: String!
    isCompleted: Boolean!
}
